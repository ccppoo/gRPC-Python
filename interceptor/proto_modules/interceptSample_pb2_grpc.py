# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import interceptSample_pb2 as interceptSample__pb2
import utils_pb2 as utils__pb2


class SecureMessageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PingRequest = channel.unary_unary(
                '/interceptors.SecureMessage/PingRequest',
                request_serializer=utils__pb2.Ping.SerializeToString,
                response_deserializer=utils__pb2.Pong.FromString,
                )
        self.sendMessage = channel.unary_unary(
                '/interceptors.SecureMessage/sendMessage',
                request_serializer=interceptSample__pb2.Load.SerializeToString,
                response_deserializer=interceptSample__pb2.Load.FromString,
                )
        self.addTheseNumbers = channel.stream_unary(
                '/interceptors.SecureMessage/addTheseNumbers',
                request_serializer=interceptSample__pb2.Num.SerializeToString,
                response_deserializer=interceptSample__pb2.Num.FromString,
                )


class SecureMessageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PingRequest(self, request, context):
        """ping method :: ask new messages to server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """send message to server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addTheseNumbers(self, request_iterator, context):
        """example for stream-unary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SecureMessageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PingRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.PingRequest,
                    request_deserializer=utils__pb2.Ping.FromString,
                    response_serializer=utils__pb2.Pong.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=interceptSample__pb2.Load.FromString,
                    response_serializer=interceptSample__pb2.Load.SerializeToString,
            ),
            'addTheseNumbers': grpc.stream_unary_rpc_method_handler(
                    servicer.addTheseNumbers,
                    request_deserializer=interceptSample__pb2.Num.FromString,
                    response_serializer=interceptSample__pb2.Num.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'interceptors.SecureMessage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SecureMessage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PingRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interceptors.SecureMessage/PingRequest',
            utils__pb2.Ping.SerializeToString,
            utils__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interceptors.SecureMessage/sendMessage',
            interceptSample__pb2.Load.SerializeToString,
            interceptSample__pb2.Load.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addTheseNumbers(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/interceptors.SecureMessage/addTheseNumbers',
            interceptSample__pb2.Num.SerializeToString,
            interceptSample__pb2.Num.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
